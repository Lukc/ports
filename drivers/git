#!/bin/sh
#
# /etc/ports/drivers/git: git driver script for ports(8)
#

OLDPWD=$PWD

if [ $# -ne 1 ]; then
	echo "usage: $0 <file>"
	exit 1
fi

# Exports to avoid having env vars disturbing the script.
root_dir=""
url=""
branch=""

. $1

# Lowercase syntax is recommended, but old ports files used capitalized
#+ ones. To avoid having problems of deprecation or retro-compatibility,
#+ we just use the capitalized variables if the lowercase ones are not
#+ set.
if [ -z "$root_dir" ]; then
	root_dir="$ROOT_DIR"
fi

if [ -z "$url" ]; then
	url="$URL"
fi

if [ -z "$branch" ]; then
	branch="$BRANCH"
fi

# Not having all parameters is fatal. They were set in the ports file.
if [ -z "$root_dir" ]; then
	echo "\$root_dir not set in '$1'." >&2
	exit 2
fi

if [ -z "$url" ]; then
	echo "\$url not set in '$1'." >&2
	exit 2
fi

if [ -e "$root_dir" ]; then
	mkdir -p "$root_dir"
fi

for REPO in $url; do
	PORT=`echo $REPO | sed -n '/#.*$/s|^.*#||p'`
	if [ ! -e $root_dir/$PORT ]; then
		git clone $REPO $root_dir/$PORT --depth 1
		cd $root_dir/$PORT
	elif [ -e $root_dir/$PORT ] && [ ! -d $root_dir/$PORT ]; then
		echo "-- '$root_dir/$PORT' exists and is not a directory." >&2
		return 1
	elif [ -d $root_dir/$PORT ] && [ ! -d $root_dir/$PORT ]; then
		echo "-- '$root_dir/$PORT' is not a git repository." >&2
		return 2
	else
		cd $root_dir/$PORT
		git reset --hard -q
		git pull
	fi
done

git checkout ${branch:-master}

cd $OLDPWD

